1、基本介绍
gtest是一个跨平台的C++单元测试框架，由google公司发布。gtest是为在不同平台上为编写C++测试而生成的。
gmock用于对函数进行打桩，控制函数的输入输出，配合gtest测试框架使用，可以构造异常，测试代码的异常分支。gmock是利用类的多态实现的，所以只支持对类的虚成员函数进行打桩。

2、gtest安装
源码下载：https://github.com/google/googletest
编译：
mkdir build
cd build
cmake ..
make install

3、gmock
EXPECT_CALL(mock_object, method(matchers))
    .Times(cardinality)
    .WillOnce(action)
    .WillRepeatedly(action);

mock_object: 对象
method(matchers): 匹配函数
cardinality:被调用次数
action： 调用时行为

4、example

#include <gtest/gtest.h>
#include <gmock/gmock.h>

class Test_xxx:public testing::Test {
public:
  virtual void SetUp() {}
  virtual void TearDown() {}

  static void SetUpTestCase() {}
  static void TearDownTestCase() {}
};

TEST_F(Test_xxx, t1) {

  EXPECT_EQ(rc, 0);
}

int main(int argc, char *argv[]) {

  testing::InitGoogleTest(&argc, argv); 
  int rc = RUN_ALL_TESTS();

  return 0;
}