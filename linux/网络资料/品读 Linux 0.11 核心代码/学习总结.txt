
1、bios首次读硬盘的第一个分区（512字节），加载到内存0x7c00处（31K），然后跳转到0x7c00开始执行。
2、启动代码再次将512字节内容搬移到0x90000处（576k）。
3、设置栈为0x9ff00(639k)。
4、将硬盘的第 2 个扇区开始，把数据加载到内存 0x90200 处，共加载4个扇区。
5、把从硬盘第 6 个扇区开始往后的 240 个扇区，加载到内存 0x10000 处


为什么BIOS把bootsect加载到0x07c00,而不是0x00000?
因为BIOS将从0x00000开始的1KB字节构建了了中断向量表


以一个8K的BIOS为例，其所占的地址段为0xFE000~0xFFFFF。 此时CS：IP已经指向了0xFFFF0这个位置

BIOS在程序最开始的位置，即0x00000，用1K的内存空间（0x00000~0x003FF）构建中断向量表，
并在紧挨他的位置用256字节的内存空间构建BIOS数据区（0x00400~0x004FF）,在大约56K的位置（0x0E2CE）加载了8K左右的与中断向量表相应的若干中断服务程序。

中断向量表中有256个中断向量，每个中断向量占有4个字节空间，其中2个字节是CS的值，2个是IP的值，每个中断向量都指向一个具体的中断服务程序。

注释：
1 0x00100是256个字节，那么0x004000就是4*256个字节，即1024个字节，为1K。从0x00400开始计算，1K的高端地址不是0x00400，是0x00400-1，即0x003FF。